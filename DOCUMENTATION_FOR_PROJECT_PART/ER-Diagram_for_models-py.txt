ER-диаграмма (ASCII) for models.py

                          +--------------------------------------+
                          |               VKUser                 |
                          +--------------------------------------+
                          | vk_id (PK)                           |
                          | first_name                           |
                          | last_name                            |
                          | age?                                 |
                          | city?                                |
                          | sex? (1=f, 2=m)                      |
                          | preferred_sex? (0/1/2)               |
                          | profile_link?                        |
                          | last_active?                         |
                          | created_at?                          |
                          +--------------------------------------+
                               ^            ^                ^
                               |            |                |
                               |            |                |
                 N..1          |            |        N..1 / 1..1
                               |            |
      +------------------------+            +---------------------------+
      |                                                             |
+-------------------------------+                +-------------------------------+
|          UserPhoto            |                |          UserState            |
+-------------------------------+                +-------------------------------+
| photo_id (PK)                 |                | state_id (PK)                 |
| vk_id (FK → VKUser.vk_id)     |                | vk_user_id (FK → VKUser)      |
| photo_url                     |                | current_state                 |
| likes_count                   |                | state_data?                   |
| created_at                    |                | created_at?                   |
+-------------------------------+                | updated_at?                   |
                                                 +-------------------------------+

+-------------------------------+
|           Favorite            |
+-------------------------------+
| favorite_id (PK)              |
| user_id (FK → VKUser.vk_id)   |─── N..1 ─┐
| favorite_vk_id (FK → VKUser)  |─── N..1 ─┴──► (оба указывают на VKUser.vk_id)
| created_at                    |
+-------------------------------+

+-------------------------------+
|        ViewedProfile          |
+-------------------------------+
| view_id (PK)                  |
| user_id (FK → VKUser.vk_id)   |─── N..1 ─┐
| viewed_vk_id (FK → VKUser)    |─── N..1 ─┴──► (оба указывают на VKUser.vk_id)
| created_at                    |
+-------------------------------+


Легенда связей:

- UserPhoto.vk_id → VKUser.vk_id — связь N..1
  Один пользователь может иметь много фотографий.

- Favorite.user_id → VKUser.vk_id — связь N..1
  У одного пользователя может быть много избранных.

- Favorite.favorite_vk_id → VKUser.vk_id — связь N..1
  Каждый «избранный» также является пользователем VKUser.

- ViewedProfile.user_id → VKUser.vk_id — связь N..1
  Один пользователь может просматривать много других профилей.

- ViewedProfile.viewed_vk_id → VKUser.vk_id — связь N..1
  Каждый просмотр указывает на другого пользователя VKUser.

- UserState.vk_user_id → VKUser.vk_id — связь 1..1 (чаще всего)
  Обычно у одного пользователя одно актуальное состояние,
  но можно хранить историю состояний, тогда это будет N..1.


Описание таблиц:

VKUser — центральная таблица, хранящая пользователей ВКонтакте.

UserPhoto — фотографии пользователей.

Favorite — список избранных профилей.

ViewedProfile — список просмотренных профилей.

UserState — текущее состояние пользователя (для FSM/бота).


FSM = Finite State Machine (конечный автомат состояний). - это модель, которая описывает объект/систему через набор состояний и переходов между ними.

Основные элементы FSM

	Состояния (States) — фиксированные этапы, в которых может находиться объект.
	Пример: MAIN_MENU, SEARCHING, VIEWING_PROFILE.

	События/условия (Events/Transitions) — то, что вызывает переход из одного состояния в другое.
	Пример: пользователь нажал кнопку «Найти» → переход из MAIN_MENU в SEARCHING.

	Начальное состояние — то, с чего всё начинается.
	Пример: MAIN_MENU.

	Конечное состояние (не всегда нужно) — завершение работы.