import json
from typing import Optional

class KeyboardManager:
    @staticmethod
    def create_main_keyboard(inline: bool = False) -> str:
        """–°–æ–∑–¥–∞–µ—Ç –≥–ª–∞–≤–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É"""
        keyboard = {
            "one_time": False,
            "inline": inline,
            "buttons": [
                [{
                    "action": {
                        "type": "text",
                        "label": "üîç –ù–∞–π—Ç–∏ —á–µ–ª–æ–≤–µ–∫–∞",
                        "payload": json.dumps({"command": "search"})
                    },
                    "color": "primary"
                }],
                [{
                    "action": {
                        "type": "text",
                        "label": "‚≠ê –ò–∑–±—Ä–∞–Ω–Ω—ã–µ",
                        "payload": json.dumps({"command": "favorites"})
                    },
                    "color": "secondary"
                }],
                [{
                    "action": {
                        "type": "text",
                        "label": "üíï –ü—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è –ø–æ –ø–æ–ª—É",
                        "payload": json.dumps({"command": "preferred_sex"})
                    },
                    "color": "secondary"
                }],
                [{
                    "action": {
                        "type": "text",
                        "label": "‚öôÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å",
                        "payload": json.dumps({"command": "edit_profile"})
                    },
                    "color": "secondary"
                }]
            ]
        }
        return json.dumps(keyboard, ensure_ascii=False)

    @staticmethod
    def create_search_keyboard(inline: bool = False) -> str:
        """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –ø–æ–∏—Å–∫–∞ —Å —Å–∏—Å—Ç–µ–º–æ–π –æ—Ü–µ–Ω–æ–∫"""
        keyboard = {
            "one_time": False,
            "inline": inline,
            "buttons": [
                [{
                    "action": {
                        "type": "text",
                        "label": "‚ù§Ô∏è –õ–∞–π–∫",
                        "payload": json.dumps({"command": "like"})
                    },
                    "color": "positive"
                }, {
                    "action": {
                        "type": "text",
                        "label": "üëé –î–∏–∑–ª–∞–π–∫",
                        "payload": json.dumps({"command": "dislike"})
                    },
                    "color": "negative"
                }],
                [{
                    "action": {
                        "type": "text",
                        "label": "üö´ –ß–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫",
                        "payload": json.dumps({"command": "blacklist"})
                    },
                    "color": "secondary"
                }],
                [{
                    "action": {
                        "type": "text",
                        "label": "‚≠ê –î–æ–±–∞–≤–∏—Ç—å –≤ –∏–∑–±—Ä–∞–Ω–Ω—ã–µ",
                        "payload": json.dumps({"command": "add_to_favorites"})
                    },
                    "color": "positive"
                }],
                [{
                    "action": {
                        "type": "text",
                        "label": "‚û°Ô∏è –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å",
                        "payload": json.dumps({"command": "skip"})
                    },
                    "color": "primary"
                }],
                [{
                    "action": {
                        "type": "text",
                        "label": "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
                        "payload": json.dumps({"command": "main_menu"})
                    },
                    "color": "secondary"
                }]
            ]
        }
        return json.dumps(keyboard, ensure_ascii=False)

    @staticmethod
    def create_favorites_keyboard(inline: bool = False) -> str:
        """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ"""
        keyboard = {
            "one_time": False,
            "inline": inline,
            "buttons": [
                [{
                    "action": {
                        "type": "text",
                        "label": "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
                        "payload": json.dumps({"command": "main_menu"})
                    },
                    "color": "secondary"
                }]
            ]
        }
        return json.dumps(keyboard, ensure_ascii=False)

    @staticmethod
    def create_profile_setup_keyboard(inline: bool = False) -> str:
        """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è"""
        keyboard = {
            "one_time": False,
            "inline": inline,
            "buttons": [
                [{
                    "action": {
                        "type": "text",
                        "label": "üéÇ –£–∫–∞–∑–∞—Ç—å –≤–æ–∑—Ä–∞—Å—Ç",
                        "payload": json.dumps({"command": "age"})
                    },
                    "color": "primary"
                }],
                [{
                    "action": {
                        "type": "text",
                        "label": "üèôÔ∏è –£–∫–∞–∑–∞—Ç—å –≥–æ—Ä–æ–¥",
                        "payload": json.dumps({"command": "city"})
                    },
                    "color": "primary"
                }],
                [{
                    "action": {
                        "type": "text",
                        "label": "üë´ –£–∫–∞–∑–∞—Ç—å –ø–æ–ª",
                        "payload": json.dumps({"command": "sex"})
                    },
                    "color": "primary"
                }],
                [{
                    "action": {
                        "type": "text",
                        "label": "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
                        "payload": json.dumps({"command": "main_menu"})
                    },
                    "color": "secondary"
                }]
            ]
        }
        return json.dumps(keyboard, ensure_ascii=False)

    @staticmethod
    def create_age_selection_keyboard(inline: bool = False) -> str:
        """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ –≤–æ–∑—Ä–∞—Å—Ç–∞"""
        keyboard = {
            "one_time": False,
            "inline": inline,
            "buttons": [
                [{
                    "action": {
                        "type": "text",
                        "label": "18-25 –ª–µ—Ç",
                        "payload": json.dumps({"command": "age_selected", "age_range": "18-25"})
                    },
                    "color": "primary"
                }, {
                    "action": {
                        "type": "text",
                        "label": "26-35 –ª–µ—Ç",
                        "payload": json.dumps({"command": "age_selected", "age_range": "26-35"})
                    },
                    "color": "primary"
                }],
                [{
                    "action": {
                        "type": "text",
                        "label": "36-45 –ª–µ—Ç",
                        "payload": json.dumps({"command": "age_selected", "age_range": "36-45"})
                    },
                    "color": "primary"
                }, {
                    "action": {
                        "type": "text",
                        "label": "46-60 –ª–µ—Ç",
                        "payload": json.dumps({"command": "age_selected", "age_range": "46-60"})
                    },
                    "color": "primary"
                }],
                [{
                    "action": {
                        "type": "text",
                        "label": "60+ –ª–µ—Ç",
                        "payload": json.dumps({"command": "age_selected", "age_range": "60+"})
                    },
                    "color": "primary"
                }],
                [{
                    "action": {
                        "type": "text",
                        "label": "üîô –ù–∞–∑–∞–¥",
                        "payload": json.dumps({"command": "main_menu"})
                    },
                    "color": "secondary"
                }]
            ]
        }
        return json.dumps(keyboard, ensure_ascii=False)

    @staticmethod
    def create_city_selection_keyboard(inline: bool = False) -> str:
        """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ –≥–æ—Ä–æ–¥–∞"""
        keyboard = {
            "one_time": False,
            "inline": inline,
            "buttons": [
                [{
                    "action": {
                        "type": "text",
                        "label": "–ú–æ—Å–∫–≤–∞",
                        "payload": json.dumps({"command": "city_selected", "city": "–ú–æ—Å–∫–≤–∞"})
                    },
                    "color": "primary"
                }, {
                    "action": {
                        "type": "text",
                        "label": "–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥",
                        "payload": json.dumps({"command": "city_selected", "city": "–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥"})
                    },
                    "color": "primary"
                }],
                [{
                    "action": {
                        "type": "text",
                        "label": "–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫",
                        "payload": json.dumps({"command": "city_selected", "city": "–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫"})
                    },
                    "color": "primary"
                }, {
                    "action": {
                        "type": "text",
                        "label": "–ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥",
                        "payload": json.dumps({"command": "city_selected", "city": "–ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥"})
                    },
                    "color": "primary"
                }],
                [{
                    "action": {
                        "type": "text",
                        "label": "–ö–∞–∑–∞–Ω—å",
                        "payload": json.dumps({"command": "city_selected", "city": "–ö–∞–∑–∞–Ω—å"})
                    },
                    "color": "primary"
                }, {
                    "action": {
                        "type": "text",
                        "label": "–ù–∏–∂–Ω–∏–π –ù–æ–≤–≥–æ—Ä–æ–¥",
                        "payload": json.dumps({"command": "city_selected", "city": "–ù–∏–∂–Ω–∏–π –ù–æ–≤–≥–æ—Ä–æ–¥"})
                    },
                    "color": "primary"
                }],
                [{
                    "action": {
                        "type": "text",
                        "label": "–ß–µ–ª—è–±–∏–Ω—Å–∫",
                        "payload": json.dumps({"command": "city_selected", "city": "–ß–µ–ª—è–±–∏–Ω—Å–∫"})
                    },
                    "color": "primary"
                }, {
                    "action": {
                        "type": "text",
                        "label": "–°–∞–º–∞—Ä–∞",
                        "payload": json.dumps({"command": "city_selected", "city": "–°–∞–º–∞—Ä–∞"})
                    },
                    "color": "primary"
                }],
                [{
                    "action": {
                        "type": "text",
                        "label": "‚úèÔ∏è –í–≤–µ—Å—Ç–∏ –¥—Ä—É–≥–æ–π –≥–æ—Ä–æ–¥",
                        "payload": json.dumps({"command": "city_input"})
                    },
                    "color": "secondary"
                }],
                [{
                    "action": {
                        "type": "text",
                        "label": "üîô –ù–∞–∑–∞–¥",
                        "payload": json.dumps({"command": "main_menu"})
                    },
                    "color": "secondary"
                }]
            ]
        }
        return json.dumps(keyboard, ensure_ascii=False)

    @staticmethod
    def create_sex_selection_keyboard(inline: bool = False) -> str:
        """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ –ø–æ–ª–∞"""
        keyboard = {
            "one_time": False,
            "inline": inline,
            "buttons": [
                [{
                    "action": {
                        "type": "text",
                        "label": "üë® –ú—É–∂—Å–∫–æ–π",
                        "payload": json.dumps({"command": "sex_selected", "sex": 2})
                    },
                    "color": "primary"
                }, {
                    "action": {
                        "type": "text",
                        "label": "üë© –ñ–µ–Ω—Å–∫–∏–π",
                        "payload": json.dumps({"command": "sex_selected", "sex": 1})
                    },
                    "color": "primary"
                }],
                [{
                    "action": {
                        "type": "text",
                        "label": "üîô –ù–∞–∑–∞–¥",
                        "payload": json.dumps({"command": "main_menu"})
                    },
                    "color": "secondary"
                }]
            ]
        }
        return json.dumps(keyboard, ensure_ascii=False)

    @staticmethod
    def create_preferred_sex_selection_keyboard(inline: bool = False) -> str:
        """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–π –ø–æ –ø–æ–ª—É"""
        keyboard = {
            "one_time": False,
            "inline": inline,
            "buttons": [
                [{"action": {"type": "text", "label": "üë© –ñ–µ–Ω—Å–∫–∏–π", "payload": json.dumps({"preferred_sex": 1})}, "color": "primary"}],
                [{"action": {"type": "text", "label": "üë® –ú—É–∂—Å–∫–æ–π", "payload": json.dumps({"preferred_sex": 2})}, "color": "primary"}],
                [{"action": {"type": "text", "label": "ü§∑ –õ—é–±–æ–π", "payload": json.dumps({"preferred_sex": 0})}, "color": "secondary"}],
                [{"action": {"type": "text", "label": "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", "payload": json.dumps({"command": "main_menu"})}, "color": "negative"}]
            ]
        }
        return json.dumps(keyboard, ensure_ascii=False)

    @staticmethod
    def create_empty_keyboard() -> str:
        """–°–æ–∑–¥–∞–µ—Ç –ø—É—Å—Ç—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É (—Å–∫—Ä—ã–≤–∞–µ—Ç –ø—Ä–µ–¥—ã–¥—É—â—É—é)"""
        return json.dumps({"buttons": [], "one_time": True})